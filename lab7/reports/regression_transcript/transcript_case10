# 1
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5c Compiler 2017.01 Jan 23 2017
# Start time: 16:06:10 on Apr 16,2024
# vlog -sv -timescale 1ps/1ps -work work -f sources.txt 
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling module instr_register_test
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 16:06:10 on Apr 16,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -novopt -quiet -nocoverage "+notimingchecks" "+nowarnTSCALE" -sva top -GNAME_OF_TEST=case10 -GWR_ORDER=1 -GRD_ORDER=1 -GRD_NR=32 -GWRITE_NR=50 -GSEED_VAL=1286943 
# Start time: 16:06:10 on Apr 16,2024
# 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH.  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Reseting the instruction register...
# 
# Writing values to register stack...
# Writing to register location 0: 
#   opcode = 3 (ADD)
#   operand_a = 4
#   operand_b = 13
# 
# Writing to register location 27: 
#   opcode = 3 (ADD)
#   operand_a = 13
#   operand_b = 11
# 
# Writing to register location 2: 
#   opcode = 3 (ADD)
#   operand_a = -2
#   operand_b = 14
# 
# Writing to register location 3: 
#   opcode = 7 (MOD)
#   operand_a = -2
#   operand_b = 3
# 
# Writing to register location 15: 
#   opcode = 0 (ZERO)
#   operand_a = -13
#   operand_b = 15
# 
# Writing to register location 5: 
#   opcode = 4 (SUB)
#   operand_a = -1
#   operand_b = 9
# 
# Writing to register location 6: 
#   opcode = 1 (PASSA)
#   operand_a = 9
#   operand_b = 12
# 
# Writing to register location 9: 
#   opcode = 5 (MULT)
#   operand_a = 12
#   operand_b = 9
# 
# Writing to register location 8: 
#   opcode = 2 (PASSB)
#   operand_a = -6
#   operand_b = 9
# 
# Writing to register location 9: 
#   opcode = 2 (PASSB)
#   operand_a = 9
#   operand_b = 10
# 
# Writing to register location 2: 
#   opcode = 6 (DIV)
#   operand_a = 10
#   operand_b = 2
# 
# Writing to register location 11: 
#   opcode = 2 (PASSB)
#   operand_a = 7
#   operand_b = 14
# 
# Writing to register location 12: 
#   opcode = 0 (ZERO)
#   operand_a = 14
#   operand_b = 2
# 
# Writing to register location 0: 
#   opcode = 1 (PASSA)
#   operand_a = 2
#   operand_b = 0
# 
# Writing to register location 14: 
#   opcode = 7 (MOD)
#   operand_a = -2
#   operand_b = 15
# 
# Writing to register location 15: 
#   opcode = 6 (DIV)
#   operand_a = -1
#   operand_b = 7
# 
# Writing to register location 22: 
#   opcode = 3 (ADD)
#   operand_a = 7
#   operand_b = 6
# 
# Writing to register location 17: 
#   opcode = 4 (SUB)
#   operand_a = 6
#   operand_b = 9
# 
# Writing to register location 18: 
#   opcode = 4 (SUB)
#   operand_a = 9
#   operand_b = 4
# 
# Writing to register location 4: 
#   opcode = 0 (ZERO)
#   operand_a = 4
#   operand_b = 4
# 
# Writing to register location 20: 
#   opcode = 1 (PASSA)
#   operand_a = 5
#   operand_b = 5
# 
# Writing to register location 21: 
#   opcode = 3 (ADD)
#   operand_a = 5
#   operand_b = 9
# 
# Writing to register location 11: 
#   opcode = 6 (DIV)
#   operand_a = 9
#   operand_b = 11
# 
# Writing to register location 23: 
#   opcode = 7 (MOD)
#   operand_a = 4
#   operand_b = 1
# 
# Writing to register location 24: 
#   opcode = 1 (PASSA)
#   operand_a = 1
#   operand_b = 15
# 
# Writing to register location 9: 
#   opcode = 4 (SUB)
#   operand_a = -1
#   operand_b = 9
# 
# Writing to register location 26: 
#   opcode = 6 (DIV)
#   operand_a = 7
#   operand_b = 11
# 
# Writing to register location 27: 
#   opcode = 3 (ADD)
#   operand_a = -5
#   operand_b = 14
# 
# Writing to register location 11: 
#   opcode = 3 (ADD)
#   operand_a = 14
#   operand_b = 11
# 
# Writing to register location 29: 
#   opcode = 1 (PASSA)
#   operand_a = 3
#   operand_b = 14
# 
# Writing to register location 30: 
#   opcode = 7 (MOD)
#   operand_a = 14
#   operand_b = 9
# 
# Writing to register location 23: 
#   opcode = 3 (ADD)
#   operand_a = 9
#   operand_b = 7
# 
# Writing to register location 0: 
#   opcode = 3 (ADD)
#   operand_a = 8
#   operand_b = 11
# 
# Writing to register location 1: 
#   opcode = 2 (PASSB)
#   operand_a = 11
#   operand_b = 3
# 
# Writing to register location 18: 
#   opcode = 1 (PASSA)
#   operand_a = 3
#   operand_b = 2
# 
# Writing to register location 3: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 9
# 
# Writing to register location 4: 
#   opcode = 6 (DIV)
#   operand_a = 9
#   operand_b = 0
# 
# Writing to register location 6: 
#   opcode = 2 (PASSB)
#   operand_a = 0
#   operand_b = 6
# 
# Writing to register location 6: 
#   opcode = 6 (DIV)
#   operand_a = 0
#   operand_b = 14
# 
# Writing to register location 7: 
#   opcode = 3 (ADD)
#   operand_a = 14
#   operand_b = 6
# 
# Writing to register location 19: 
#   opcode = 1 (PASSA)
#   operand_a = 6
#   operand_b = 3
# 
# Writing to register location 9: 
#   opcode = 7 (MOD)
#   operand_a = 0
#   operand_b = 5
# 
# Writing to register location 10: 
#   opcode = 1 (PASSA)
#   operand_a = -11
#   operand_b = 7
# 
# Writing to register location 25: 
#   opcode = 3 (ADD)
#   operand_a = 7
#   operand_b = 9
# 
# Writing to register location 12: 
#   opcode = 3 (ADD)
#   operand_a = -13
#   operand_b = 6
# 
# Writing to register location 13: 
#   opcode = 0 (ZERO)
#   operand_a = 6
#   operand_b = 11
# 
# Writing to register location 16: 
#   opcode = 6 (DIV)
#   operand_a = -5
#   operand_b = 0
# 
# Writing to register location 15: 
#   opcode = 1 (PASSA)
#   operand_a = -6
#   operand_b = 5
# 
# Writing to register location 16: 
#   opcode = 5 (MULT)
#   operand_a = -11
#   operand_b = 9
# 
# Writing to register location 29: 
#   opcode = 6 (DIV)
#   operand_a = -7
#   operand_b = 13
# 
# 
# Reading back the same register locations written...
# Read from register location 28: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#  exp_result = 0
# 
# 
# Verification Result:
#   Read Pointer: 28
#   Opcode: 0 (ZERO)
#   Operand A: 0
#   Operand B: 0
# 
# Calculated Result: 0
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 9: 
#   opcode = 7 (MOD)
#   operand_a = 0
#   operand_b = 5
# 
#  exp_result = 0
# 
# 
# Verification Result:
#   Read Pointer: 9
#   Opcode: 7 (MOD)
#   Operand A: 0
#   Operand B: 5
# 
# Calculated Result: 0
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 20: 
#   opcode = 1 (PASSA)
#   operand_a = 5
#   operand_b = 5
# 
#  exp_result = 5
# 
# 
# Verification Result:
#   Read Pointer: 20
#   Opcode: 1 (PASSA)
#   Operand A: 5
#   Operand B: 5
# 
# Calculated Result: 5
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 24: 
#   opcode = 1 (PASSA)
#   operand_a = 1
#   operand_b = 15
# 
#  exp_result = 1
# 
# 
# Verification Result:
#   Read Pointer: 24
#   Opcode: 1 (PASSA)
#   Operand A: 1
#   Operand B: 15
# 
# Calculated Result: 1
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 31: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#  exp_result = 0
# 
# 
# Verification Result:
#   Read Pointer: 31
#   Opcode: 0 (ZERO)
#   Operand A: 0
#   Operand B: 0
# 
# Calculated Result: 0
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 18: 
#   opcode = 1 (PASSA)
#   operand_a = 3
#   operand_b = 2
# 
#  exp_result = 3
# 
# 
# Verification Result:
#   Read Pointer: 18
#   Opcode: 1 (PASSA)
#   Operand A: 3
#   Operand B: 2
# 
# Calculated Result: 3
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 19: 
#   opcode = 1 (PASSA)
#   operand_a = 6
#   operand_b = 3
# 
#  exp_result = 6
# 
# 
# Verification Result:
#   Read Pointer: 19
#   Opcode: 1 (PASSA)
#   Operand A: 6
#   Operand B: 3
# 
# Calculated Result: 6
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 23: 
#   opcode = 3 (ADD)
#   operand_a = 9
#   operand_b = 7
# 
#  exp_result = 16
# 
# 
# Verification Result:
#   Read Pointer: 23
#   Opcode: 3 (ADD)
#   Operand A: 9
#   Operand B: 7
# 
# Calculated Result: 16
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 5: 
#   opcode = 4 (SUB)
#   operand_a = -1
#   operand_b = 9
# 
#  exp_result = -10
# 
# 
# Verification Result:
#   Read Pointer: 5
#   Opcode: 4 (SUB)
#   Operand A: -1
#   Operand B: 9
# 
# Calculated Result: -10
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 5: 
#   opcode = 4 (SUB)
#   operand_a = -1
#   operand_b = 9
# 
#  exp_result = -10
# 
# 
# Verification Result:
#   Read Pointer: 5
#   Opcode: 4 (SUB)
#   Operand A: -1
#   Operand B: 9
# 
# Calculated Result: -10
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 0: 
#   opcode = 3 (ADD)
#   operand_a = 8
#   operand_b = 11
# 
#  exp_result = 19
# 
# 
# Verification Result:
#   Read Pointer: 0
#   Opcode: 3 (ADD)
#   Operand A: 8
#   Operand B: 11
# 
# Calculated Result: 19
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 1: 
#   opcode = 2 (PASSB)
#   operand_a = 11
#   operand_b = 3
# 
#  exp_result = 3
# 
# 
# Verification Result:
#   Read Pointer: 1
#   Opcode: 2 (PASSB)
#   Operand A: 11
#   Operand B: 3
# 
# Calculated Result: 3
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 6: 
#   opcode = 6 (DIV)
#   operand_a = 0
#   operand_b = 14
# 
#  exp_result = 0
# 
# 
# Verification Result:
#   Read Pointer: 6
#   Opcode: 6 (DIV)
#   Operand A: 0
#   Operand B: 14
# 
# Calculated Result: 0
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 8: 
#   opcode = 2 (PASSB)
#   operand_a = -6
#   operand_b = 9
# 
#  exp_result = 9
# 
# 
# Verification Result:
#   Read Pointer: 8
#   Opcode: 2 (PASSB)
#   Operand A: -6
#   Operand B: 9
# 
# Calculated Result: 9
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 5: 
#   opcode = 4 (SUB)
#   operand_a = -1
#   operand_b = 9
# 
#  exp_result = -10
# 
# 
# Verification Result:
#   Read Pointer: 5
#   Opcode: 4 (SUB)
#   Operand A: -1
#   Operand B: 9
# 
# Calculated Result: -10
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 23: 
#   opcode = 3 (ADD)
#   operand_a = 9
#   operand_b = 7
# 
#  exp_result = 16
# 
# 
# Verification Result:
#   Read Pointer: 23
#   Opcode: 3 (ADD)
#   Operand A: 9
#   Operand B: 7
# 
# Calculated Result: 16
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 10: 
#   opcode = 1 (PASSA)
#   operand_a = -11
#   operand_b = 7
# 
#  exp_result = -11
# 
# 
# Verification Result:
#   Read Pointer: 10
#   Opcode: 1 (PASSA)
#   Operand A: -11
#   Operand B: 7
# 
# Calculated Result: -11
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 6: 
#   opcode = 6 (DIV)
#   operand_a = 0
#   operand_b = 14
# 
#  exp_result = 0
# 
# 
# Verification Result:
#   Read Pointer: 6
#   Opcode: 6 (DIV)
#   Operand A: 0
#   Operand B: 14
# 
# Calculated Result: 0
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 29: 
#   opcode = 6 (DIV)
#   operand_a = -7
#   operand_b = 13
# 
#  exp_result = 0
# 
# 
# Verification Result:
#   Read Pointer: 29
#   Opcode: 6 (DIV)
#   Operand A: -7
#   Operand B: 13
# 
# Calculated Result: 0
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 30: 
#   opcode = 7 (MOD)
#   operand_a = 14
#   operand_b = 9
# 
#  exp_result = 5
# 
# 
# Verification Result:
#   Read Pointer: 30
#   Opcode: 7 (MOD)
#   Operand A: 14
#   Operand B: 9
# 
# Calculated Result: 5
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 21: 
#   opcode = 3 (ADD)
#   operand_a = 5
#   operand_b = 9
# 
#  exp_result = 14
# 
# 
# Verification Result:
#   Read Pointer: 21
#   Opcode: 3 (ADD)
#   Operand A: 5
#   Operand B: 9
# 
# Calculated Result: 14
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 27: 
#   opcode = 3 (ADD)
#   operand_a = -5
#   operand_b = 14
# 
#  exp_result = 9
# 
# 
# Verification Result:
#   Read Pointer: 27
#   Opcode: 3 (ADD)
#   Operand A: -5
#   Operand B: 14
# 
# Calculated Result: 9
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 7: 
#   opcode = 3 (ADD)
#   operand_a = 14
#   operand_b = 6
# 
#  exp_result = 20
# 
# 
# Verification Result:
#   Read Pointer: 7
#   Opcode: 3 (ADD)
#   Operand A: 14
#   Operand B: 6
# 
# Calculated Result: 20
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 7: 
#   opcode = 3 (ADD)
#   operand_a = 14
#   operand_b = 6
# 
#  exp_result = 20
# 
# 
# Verification Result:
#   Read Pointer: 7
#   Opcode: 3 (ADD)
#   Operand A: 14
#   Operand B: 6
# 
# Calculated Result: 20
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 29: 
#   opcode = 6 (DIV)
#   operand_a = -7
#   operand_b = 13
# 
#  exp_result = 0
# 
# 
# Verification Result:
#   Read Pointer: 29
#   Opcode: 6 (DIV)
#   Operand A: -7
#   Operand B: 13
# 
# Calculated Result: 0
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 10: 
#   opcode = 1 (PASSA)
#   operand_a = -11
#   operand_b = 7
# 
#  exp_result = -11
# 
# 
# Verification Result:
#   Read Pointer: 10
#   Opcode: 1 (PASSA)
#   Operand A: -11
#   Operand B: 7
# 
# Calculated Result: -11
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 29: 
#   opcode = 6 (DIV)
#   operand_a = -7
#   operand_b = 13
# 
#  exp_result = 0
# 
# 
# Verification Result:
#   Read Pointer: 29
#   Opcode: 6 (DIV)
#   Operand A: -7
#   Operand B: 13
# 
# Calculated Result: 0
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 29: 
#   opcode = 6 (DIV)
#   operand_a = -7
#   operand_b = 13
# 
#  exp_result = 0
# 
# 
# Verification Result:
#   Read Pointer: 29
#   Opcode: 6 (DIV)
#   Operand A: -7
#   Operand B: 13
# 
# Calculated Result: 0
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 18: 
#   opcode = 1 (PASSA)
#   operand_a = 3
#   operand_b = 2
# 
#  exp_result = 3
# 
# 
# Verification Result:
#   Read Pointer: 18
#   Opcode: 1 (PASSA)
#   Operand A: 3
#   Operand B: 2
# 
# Calculated Result: 3
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 19: 
#   opcode = 1 (PASSA)
#   operand_a = 6
#   operand_b = 3
# 
#  exp_result = 6
# 
# 
# Verification Result:
#   Read Pointer: 19
#   Opcode: 1 (PASSA)
#   Operand A: 6
#   Operand B: 3
# 
# Calculated Result: 6
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 2: 
#   opcode = 6 (DIV)
#   operand_a = 10
#   operand_b = 2
# 
#  exp_result = 5
# 
# 
# Verification Result:
#   Read Pointer: 2
#   Opcode: 6 (DIV)
#   Operand A: 10
#   Operand B: 2
# 
# Calculated Result: 5
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# Read from register location 16: 
#   opcode = 5 (MULT)
#   operand_a = -11
#   operand_b = 9
# 
#  exp_result = -99
# 
# 
# Verification Result:
#   Read Pointer: 16
#   Opcode: 5 (MULT)
#   Operand A: -11
#   Operand B: 9
# 
# Calculated Result: -99
# Matching Opcode!
# Matching Operand A!
# Matching Operand B!
# Matching Results!
# TEST PASSED
# 
# -------- Test Summary --------
# Total number of tests: 50
# Number of failed tests: 0
# Number of passed tests: 32
# Pass percentage: 64.00%
# Fail percentage: 0.00%
# Overall Status: Satisfactory
# -------------------------------
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH.  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_test.sv(95)
#    Time: 864 ns  Iteration: 1  Instance: /top/test
# End time: 16:06:10 on Apr 16,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
